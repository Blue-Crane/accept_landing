---
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const company = data.get("company");
    const email = data.get("email");

    await fetch("https://ts-nix.vplicei.org/api/feedback/add", {
      method: "POST",
      body: JSON.stringify({
        author: company,
        date: Date.now(),
        message: `<p>Company: ${company}</p><p>Email: ${email}</p>`,
        spec: "",
        subject: "Landing",
        title: "Request from organization",
        reviewed: false,
      }),
      headers: { "content-type": "application/json" },
    });
    return Astro.redirect("/accept_landing");
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<section id="contacts">
  <h2>Заинтересованы? Оставьте свои контакты и мы свяжемся с вами!</h2>
  <div class="wrapper">
    <div class="left">
      <h3>Контакты для связи</h3>
      <form method="POST">
        <div class="fields">
          <div class="formfield">
            <label for="company">Организация</label>
            <input
              type="text"
              name="company"
              id="company"
              required
              placeholder="Гимназия №10, город Москва"
            />
          </div>
          <div class="formfield">
            <label for="email">Email для связи</label>
            <input
              type="email"
              name="email"
              id="email"
              required
              placeholder="example@email.org"
            />
          </div>
        </div>

        <button id="submit">Отправить</button>
      </form>
    </div>
    <div class="right">
      <h3>Другие способы связи</h3>
      <div class="options">
        <div>
          <h4>Email</h4>
          <div class="description">paradise.crane.accept@gmail.com</div>
        </div>
        <div>
          <h4>Telegram</h4>
          <div class="description">@d.flip.floppa</div>
        </div>
      </div>
    </div>
  </div>
</section>
<style>
  h2 {
    margin: 2rem auto 5rem auto;
    text-align: center;
    font-size: 1.7rem;
    max-width: max(50%, 400px);
  }
  h3 {
    max-width: 70%;
  }
  section {
    padding: 0 0 8rem 0;
    min-height: 50vh;
    border-bottom: 1px solid #00000030;
  }
  .wrapper {
    color: black;
    width: 60%;
    display: flex;
    flex-direction: row;
    margin: auto;
    box-shadow: 1px 1px 120px var(--primary);
    min-width: 800px;
    background-color: var(--light-2);
    border-radius: 0.5rem;
  }
  :root.theme-dark .wrapper {
    color: white;
    background-color: var(--dark-2);
    box-shadow: 1px 1px 120px white;
  }
  .left {
    width: 60%;
    padding: 1rem 2rem;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .left > form {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
  }
  .right {
    width: 40%;
    padding: 1rem 2rem;
    border-left: 1px solid var(--dark-2);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  :root.theme-dark .right {
    border-left: 1px solid var(--light-2);
  }
  .options {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  input {
    border: none;
    border-radius: 0.5rem;
    box-shadow: 0 0 2px black;
    padding: 0.4rem 1rem;
  }

  .fields {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }
  .formfield {
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
  }
  label {
    font-size: 1rem;
    margin-bottom: 0.1rem;
  }

  :root.theme-dark button {
    background-color: unset;
    background-image: var(--accept-short-gradient);
    border: 1px solid var(--dark);
  }
  button {
    color: white;
    text-transform: uppercase;
    font-weight: 600;
    margin-top: 2rem;
    width: 100%;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;

    background-color: var(--primary);
  }
  .description {
    font-size: 1rem;
  }
  @media screen and (max-width: 850px) {
    .wrapper {
      flex-direction: column;
      min-width: unset;
    }
    h3 {
      max-width: unset;
    }
    .left {
      width: 100%;
      padding-bottom: 2rem;
    }
    .right {
      width: 100%;
      border-left: unset;
      border-top: 1px solid var(--dark-2);
      padding-bottom: 3rem;
    }
    :root.theme-dark .right {
      border-left: unset;
      border-top: 1px solid var(--light-2);
    }
  }
</style>
